# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

stages:
  - stage: build
    jobs:
    - job: run_build
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        displayName: 'Install Node.js'
      - script: |
          npm install -g @angular/cli
          npm install
          ng build --prod
        displayName: 'npm install and build'

  - stage: test
    dependsOn: build
    jobs:
    - job: L0
      pool:
        vmImage: 'Ubuntu 16.04'
      steps:
      - script: npm install 
      - task: Npm@1
        displayName: 'Test Angular'
        inputs:
          command: custom
          customCommand: run test -- --watch=false --code-coverage
    - job: L1
      pool:
        vmImage: 'Ubuntu 16.04'
      steps:
      - script: npm install 
      - task: Npm@1
        displayName: 'Test Angular'
        inputs:
          command: custom
          customCommand: run test -- --watch=false --code-coverage
    - job: L2
      pool:
        vmImage: 'Ubuntu 16.04'
      steps:
      - script: npm install 
      - task: Npm@1
        displayName: 'Test Angular'
        inputs:
          command: custom
          customCommand: run test -- --watch=false --code-coverage
    - job: publish_tests
      pool:
        vmImage: 'Ubuntu 16.04'
      steps:
      - task: CmdLine@2
        inputs:
          script: 'ls'
      - task: PublishCodeCoverageResults@1
        displayName: 'Publish code coverage Angular results'
        condition: succeededOrFailed()
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: 'coverage/my-app/cobertura-coverage.xml'
          reportDirectory: coverage
          failIfCoverageEmpty: true
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: 'TESTS-*.xml'
          searchFolder: '$(System.DefaultWorkingDirectory)/junit'

          
# - task: DeleteFiles@1
#   displayName: 'Delete JUnit files'
#   inputs:
#     SourceFolder: ./junit
#     Contents: 'TESTS*.xml'
    
# - task: PublishTestResults@2
#   displayName: 'Publish Angular test results'
#   condition: succeededOrFailed()
#   inputs:
#     searchFolder: ./junit
#     testRunTitle: Angular
#     testResultsFormat: JUnit
#     testResultsFiles: "**/TESTS*.xml"


